import unittest

import pandas as pd

from app.set_id_column import set_id_column
from detectors.incomplete import incomplete


class TestIncompleteTesting(unittest.TestCase):
    def test_basic_incomplete(self):
        """
        Should report all as incomplete and ignore the enrollment cap column
        :return: none
        """
        test_data = {
            'ID': range(1, 6),
            'classname': ["systems", "networking", "compilers", "full-stack", "vis"],
            'day': ["M/W", "T/H", "M/W", "M/W/F", "T/H"],
            'enrollment_cap': [100, 100, 250, 250, 100],
            'professor': ["kopta", "martin", "panchekha", "johnson", "rosen"]
        }

        expected_dictionary = { "classname": {1: "incomplete", 2: "incomplete", 3: "incomplete", 4: "incomplete", 5: "incomplete"},
                                "day":{1: "incomplete", 2: "incomplete", 3: "incomplete", 4: "incomplete", 5: "incomplete"},
                                "professor":{1: "incomplete", 2: "incomplete", 3: "incomplete", 4: "incomplete", 5: "incomplete"}
                                }
        data_frame = pd.DataFrame(test_data)
        detected_frame = incomplete(data_frame)
        self.assertEqual(expected_dictionary, detected_frame)

    def test_none_incomplete(self):
        """
        Should report none as incomplete
        :return: none
        """
        test_data = {
            'ID': range(1, 6),
            'classname': ["systems", "systems", "systems", "systems", "systems"],
            'day': ["M/W", "M/W", "M/W", "M/W", "M/W"],
            'enrollment_cap': [100, 100, 250, 250, 100],
            'professor': ["kopta", "kopta", "kopta", "kopta", "kopta"]
        }

        expected_dictionary = {}
        data_frame = pd.DataFrame(test_data)
        detected_frame = incomplete(data_frame)
        self.assertEqual(expected_dictionary, detected_frame)

    def test_uncleaned_stackoverflow_with_main_detector_result(self):
        test_dataframe = pd.read_csv('../provided_datasets/stackoverflow_db_uncleaned.csv')
        detected_df = incomplete(test_dataframe.head(200))
        expected_error_map = {
            "Age": {3: "incomplete", 4: "incomplete", 5: "incomplete", 105: "incomplete", 159: "incomplete"},
            "Country": {61: "incomplete", 85: "incomplete", 107: "incomplete", 147: "incomplete", 204: "incomplete",
                        226: "incomplete", 227: "incomplete", 240: "incomplete"},
            "DevType": {44: "incomplete", 101: "incomplete", 118: "incomplete", 141: "incomplete", 196: "incomplete",
                        222: "incomplete", 224: "incomplete", 234: "incomplete"},
            "FormalEducation": {81: "incomplete", 161: "incomplete", 165: "incomplete"},
            "Gender": {9: "incomplete", 10: "incomplete", 24: "incomplete", 157: "incomplete"},
            "SexualOrientation": {169: "incomplete", 221: "incomplete"}, "UndergradMajor": {15: "incomplete"},
            "YearsCoding": {169: "incomplete", 230: "incomplete"}}
        self.assertEqual(expected_error_map, detected_df)

    #----------Should finish building these tests if full integration doesn't work down the line-------#
    def test_crimes_report_with_main_detector_result(self):
        test_dataframe = pd.read_csv('../provided_datasets/Crimes_-_One_year_prior_to_present_20250421.csv')
        detected_df = incomplete(set_id_column(test_dataframe.head(200)))
        expected_error_map = {
  " LOCATION DESCRIPTION": {
    1: "incomplete",
    2: "incomplete",
    3: "incomplete",
    7: "incomplete",
    24: "incomplete",
    25: "incomplete",
    26: "incomplete",
    29: "incomplete",
    46: "incomplete",
    60: "incomplete",
    83: "incomplete",
    107: "incomplete",
    126: "incomplete",
    134: "incomplete",
    148: "incomplete",
    152: "incomplete",
    160: "incomplete",
    177: "incomplete",
    181: "incomplete",
    192: "incomplete"
  },
  " PRIMARY DESCRIPTION": {
    1: "incomplete",
    2: "incomplete",
    3: "incomplete"
  },
  " SECONDARY DESCRIPTION": {
    1: "incomplete",
    2: "incomplete",
    3: "incomplete"
  },
  "BLOCK": {
    1: "incomplete",
    2: "incomplete",
    3: "incomplete",
    4: "incomplete",
    5: "incomplete",
    6: "incomplete",
    7: "incomplete",
    8: "incomplete",
    9: "incomplete",
    10: "incomplete",
    11: "incomplete",
    12: "incomplete",
    13: "incomplete",
    14: "incomplete",
    15: "incomplete",
    16: "incomplete",
    17: "incomplete",
    18: "incomplete",
    19: "incomplete",
    20: "incomplete",
    21: "incomplete",
    22: "incomplete",
    23: "incomplete",
    24: "incomplete",
    25: "incomplete",
    26: "incomplete",
    27: "incomplete",
    28: "incomplete",
    29: "incomplete",
    30: "incomplete",
    31: "incomplete",
    32: "incomplete",
    33: "incomplete",
    34: "incomplete",
    35: "incomplete",
    36: "incomplete",
    37: "incomplete",
    38: "incomplete",
    39: "incomplete",
    40: "incomplete",
    41: "incomplete",
    42: "incomplete",
    43: "incomplete",
    44: "incomplete",
    45: "incomplete",
    46: "incomplete",
    47: "incomplete",
    48: "incomplete",
    49: "incomplete",
    50: "incomplete",
    51: "incomplete",
    52: "incomplete",
    53: "incomplete",
    54: "incomplete",
    55: "incomplete",
    56: "incomplete",
    57: "incomplete",
    58: "incomplete",
    59: "incomplete",
    60: "incomplete",
    61: "incomplete",
    62: "incomplete",
    63: "incomplete",
    64: "incomplete",
    65: "incomplete",
    66: "incomplete",
    67: "incomplete",
    68: "incomplete",
    69: "incomplete",
    70: "incomplete",
    71: "incomplete",
    72: "incomplete",
    73: "incomplete",
    74: "incomplete",
    75: "incomplete",
    76: "incomplete",
    77: "incomplete",
    78: "incomplete",
    79: "incomplete",
    80: "incomplete",
    81: "incomplete",
    82: "incomplete",
    83: "incomplete",
    84: "incomplete",
    85: "incomplete",
    86: "incomplete",
    87: "incomplete",
    88: "incomplete",
    89: "incomplete",
    90: "incomplete",
    91: "incomplete",
    92: "incomplete",
    93: "incomplete",
    94: "incomplete",
    95: "incomplete",
    96: "incomplete",
    97: "incomplete",
    98: "incomplete",
    99: "incomplete",
    100: "incomplete",
    101: "incomplete",
    102: "incomplete",
    103: "incomplete",
    104: "incomplete",
    105: "incomplete",
    106: "incomplete",
    107: "incomplete",
    108: "incomplete",
    109: "incomplete",
    110: "incomplete",
    111: "incomplete",
    112: "incomplete",
    113: "incomplete",
    114: "incomplete",
    115: "incomplete",
    116: "incomplete",
    117: "incomplete",
    118: "incomplete",
    119: "incomplete",
    120: "incomplete",
    121: "incomplete",
    122: "incomplete",
    123: "incomplete",
    124: "incomplete",
    125: "incomplete",
    126: "incomplete",
    127: "incomplete",
    128: "incomplete",
    129: "incomplete",
    130: "incomplete",
    131: "incomplete",
    132: "incomplete",
    133: "incomplete",
    134: "incomplete",
    135: "incomplete",
    136: "incomplete",
    137: "incomplete",
    138: "incomplete",
    139: "incomplete",
    140: "incomplete",
    141: "incomplete",
    142: "incomplete",
    143: "incomplete",
    144: "incomplete",
    145: "incomplete",
    146: "incomplete",
    147: "incomplete",
    148: "incomplete",
    149: "incomplete",
    150: "incomplete",
    151: "incomplete",
    152: "incomplete",
    153: "incomplete",
    154: "incomplete",
    155: "incomplete",
    156: "incomplete",
    157: "incomplete",
    158: "incomplete",
    159: "incomplete",
    160: "incomplete",
    161: "incomplete",
    162: "incomplete",
    163: "incomplete",
    164: "incomplete",
    165: "incomplete",
    166: "incomplete",
    167: "incomplete",
    168: "incomplete",
    169: "incomplete",
    170: "incomplete",
    171: "incomplete",
    172: "incomplete",
    173: "incomplete",
    174: "incomplete",
    175: "incomplete",
    176: "incomplete",
    177: "incomplete",
    178: "incomplete",
    179: "incomplete",
    180: "incomplete",
    181: "incomplete",
    182: "incomplete",
    183: "incomplete",
    184: "incomplete",
    185: "incomplete",
    186: "incomplete",
    187: "incomplete",
    188: "incomplete",
    189: "incomplete",
    190: "incomplete",
    191: "incomplete",
    192: "incomplete",
    193: "incomplete",
    194: "incomplete",
    195: "incomplete",
    196: "incomplete",
    197: "incomplete",
    198: "incomplete",
    199: "incomplete",
    200: "incomplete"
  },
  "CASE#": {
    1: "incomplete",
    2: "incomplete",
    3: "incomplete",
    4: "incomplete",
    5: "incomplete",
    6: "incomplete",
    7: "incomplete",
    8: "incomplete",
    9: "incomplete",
    10: "incomplete",
    11: "incomplete",
    12: "incomplete",
    13: "incomplete",
    14: "incomplete",
    15: "incomplete",
    16: "incomplete",
    17: "incomplete",
    18: "incomplete",
    19: "incomplete",
    20: "incomplete",
    21: "incomplete",
    22: "incomplete",
    23: "incomplete",
    24: "incomplete",
    25: "incomplete",
    26: "incomplete",
    27: "incomplete",
    28: "incomplete",
    29: "incomplete",
    30: "incomplete",
    31: "incomplete",
    32: "incomplete",
    33: "incomplete",
    34: "incomplete",
    35: "incomplete",
    36: "incomplete",
    37: "incomplete",
    38: "incomplete",
    39: "incomplete",
    40: "incomplete",
    41: "incomplete",
    42: "incomplete",
    43: "incomplete",
    44: "incomplete",
    45: "incomplete",
    46: "incomplete",
    47: "incomplete",
    48: "incomplete",
    49: "incomplete",
    50: "incomplete",
    51: "incomplete",
    52: "incomplete",
    53: "incomplete",
    54: "incomplete",
    55: "incomplete",
    56: "incomplete",
    57: "incomplete",
    58: "incomplete",
    59: "incomplete",
    60: "incomplete",
    61: "incomplete",
    62: "incomplete",
    63: "incomplete",
    64: "incomplete",
    65: "incomplete",
    66: "incomplete",
    67: "incomplete",
    68: "incomplete",
    69: "incomplete",
    70: "incomplete",
    71: "incomplete",
    72: "incomplete",
    73: "incomplete",
    74: "incomplete",
    75: "incomplete",
    76: "incomplete",
    77: "incomplete",
    78: "incomplete",
    79: "incomplete",
    80: "incomplete",
    81: "incomplete",
    82: "incomplete",
    83: "incomplete",
    84: "incomplete",
    85: "incomplete",
    86: "incomplete",
    87: "incomplete",
    88: "incomplete",
    89: "incomplete",
    90: "incomplete",
    91: "incomplete",
    92: "incomplete",
    93: "incomplete",
    94: "incomplete",
    95: "incomplete",
    96: "incomplete",
    97: "incomplete",
    98: "incomplete",
    99: "incomplete",
    100: "incomplete",
    101: "incomplete",
    102: "incomplete",
    103: "incomplete",
    104: "incomplete",
    105: "incomplete",
    106: "incomplete",
    107: "incomplete",
    108: "incomplete",
    109: "incomplete",
    110: "incomplete",
    111: "incomplete",
    112: "incomplete",
    113: "incomplete",
    114: "incomplete",
    115: "incomplete",
    116: "incomplete",
    117: "incomplete",
    118: "incomplete",
    119: "incomplete",
    120: "incomplete",
    121: "incomplete",
    122: "incomplete",
    123: "incomplete",
    124: "incomplete",
    125: "incomplete",
    126: "incomplete",
    127: "incomplete",
    128: "incomplete",
    129: "incomplete",
    130: "incomplete",
    131: "incomplete",
    132: "incomplete",
    133: "incomplete",
    134: "incomplete",
    135: "incomplete",
    136: "incomplete",
    137: "incomplete",
    138: "incomplete",
    139: "incomplete",
    140: "incomplete",
    141: "incomplete",
    142: "incomplete",
    143: "incomplete",
    144: "incomplete",
    145: "incomplete",
    146: "incomplete",
    147: "incomplete",
    148: "incomplete",
    149: "incomplete",
    150: "incomplete",
    151: "incomplete",
    152: "incomplete",
    153: "incomplete",
    154: "incomplete",
    155: "incomplete",
    156: "incomplete",
    157: "incomplete",
    158: "incomplete",
    159: "incomplete",
    160: "incomplete",
    161: "incomplete",
    162: "incomplete",
    163: "incomplete",
    164: "incomplete",
    165: "incomplete",
    166: "incomplete",
    167: "incomplete",
    168: "incomplete",
    169: "incomplete",
    170: "incomplete",
    171: "incomplete",
    172: "incomplete",
    173: "incomplete",
    174: "incomplete",
    175: "incomplete",
    176: "incomplete",
    177: "incomplete",
    178: "incomplete",
    179: "incomplete",
    180: "incomplete",
    181: "incomplete",
    182: "incomplete",
    183: "incomplete",
    184: "incomplete",
    185: "incomplete",
    186: "incomplete",
    187: "incomplete",
    188: "incomplete",
    189: "incomplete",
    190: "incomplete",
    191: "incomplete",
    192: "incomplete",
    193: "incomplete",
    194: "incomplete",
    195: "incomplete",
    196: "incomplete",
    197: "incomplete",
    198: "incomplete",
    199: "incomplete",
    200: "incomplete"
  },
  "DATE  OF OCCURRENCE": {
    1: "incomplete",
    2: "incomplete",
    3: "incomplete",
    4: "incomplete",
    5: "incomplete",
    6: "incomplete",
    7: "incomplete",
    8: "incomplete",
    9: "incomplete",
    10: "incomplete",
    11: "incomplete",
    12: "incomplete",
    13: "incomplete",
    14: "incomplete",
    15: "incomplete",
    16: "incomplete",
    17: "incomplete",
    18: "incomplete",
    19: "incomplete",
    20: "incomplete",
    21: "incomplete",
    22: "incomplete",
    23: "incomplete",
    24: "incomplete",
    25: "incomplete",
    26: "incomplete",
    27: "incomplete",
    28: "incomplete",
    29: "incomplete",
    30: "incomplete",
    31: "incomplete",
    32: "incomplete",
    33: "incomplete",
    34: "incomplete",
    35: "incomplete",
    36: "incomplete",
    37: "incomplete",
    38: "incomplete",
    39: "incomplete",
    40: "incomplete",
    41: "incomplete",
    42: "incomplete",
    43: "incomplete",
    44: "incomplete",
    45: "incomplete",
    46: "incomplete",
    47: "incomplete",
    48: "incomplete",
    49: "incomplete",
    50: "incomplete",
    51: "incomplete",
    52: "incomplete",
    53: "incomplete",
    54: "incomplete",
    55: "incomplete",
    56: "incomplete",
    57: "incomplete",
    58: "incomplete",
    59: "incomplete",
    60: "incomplete",
    61: "incomplete",
    62: "incomplete",
    63: "incomplete",
    64: "incomplete",
    65: "incomplete",
    66: "incomplete",
    67: "incomplete",
    68: "incomplete",
    69: "incomplete",
    70: "incomplete",
    71: "incomplete",
    72: "incomplete",
    73: "incomplete",
    74: "incomplete",
    75: "incomplete",
    76: "incomplete",
    77: "incomplete",
    78: "incomplete",
    79: "incomplete",
    80: "incomplete",
    81: "incomplete",
    82: "incomplete",
    83: "incomplete",
    84: "incomplete",
    85: "incomplete",
    86: "incomplete",
    87: "incomplete",
    88: "incomplete",
    89: "incomplete",
    90: "incomplete",
    91: "incomplete",
    92: "incomplete",
    93: "incomplete",
    94: "incomplete",
    95: "incomplete",
    96: "incomplete",
    97: "incomplete",
    98: "incomplete",
    99: "incomplete",
    100: "incomplete",
    101: "incomplete",
    102: "incomplete",
    103: "incomplete",
    104: "incomplete",
    105: "incomplete",
    106: "incomplete",
    107: "incomplete",
    108: "incomplete",
    109: "incomplete",
    110: "incomplete",
    111: "incomplete",
    112: "incomplete",
    113: "incomplete",
    114: "incomplete",
    115: "incomplete",
    116: "incomplete",
    117: "incomplete",
    118: "incomplete",
    119: "incomplete",
    120: "incomplete",
    121: "incomplete",
    122: "incomplete",
    123: "incomplete",
    124: "incomplete",
    125: "incomplete",
    126: "incomplete",
    127: "incomplete",
    128: "incomplete",
    129: "incomplete",
    130: "incomplete",
    131: "incomplete",
    132: "incomplete",
    133: "incomplete",
    134: "incomplete",
    135: "incomplete",
    136: "incomplete",
    137: "incomplete",
    138: "incomplete",
    139: "incomplete",
    140: "incomplete",
    141: "incomplete",
    142: "incomplete",
    143: "incomplete",
    144: "incomplete",
    145: "incomplete",
    146: "incomplete",
    147: "incomplete",
    148: "incomplete",
    149: "incomplete",
    150: "incomplete",
    151: "incomplete",
    152: "incomplete",
    153: "incomplete",
    154: "incomplete",
    155: "incomplete",
    156: "incomplete",
    157: "incomplete",
    158: "incomplete",
    159: "incomplete",
    160: "incomplete",
    161: "incomplete",
    162: "incomplete",
    163: "incomplete",
    164: "incomplete",
    165: "incomplete",
    166: "incomplete",
    167: "incomplete",
    168: "incomplete",
    169: "incomplete",
    170: "incomplete",
    171: "incomplete",
    172: "incomplete",
    173: "incomplete",
    174: "incomplete",
    175: "incomplete",
    176: "incomplete",
    177: "incomplete",
    178: "incomplete",
    179: "incomplete",
    180: "incomplete",
    181: "incomplete",
    182: "incomplete",
    183: "incomplete",
    184: "incomplete",
    185: "incomplete",
    186: "incomplete",
    187: "incomplete",
    188: "incomplete",
    189: "incomplete",
    190: "incomplete",
    191: "incomplete",
    192: "incomplete",
    193: "incomplete",
    194: "incomplete",
    195: "incomplete",
    196: "incomplete",
    197: "incomplete",
    198: "incomplete",
    199: "incomplete",
    200: "incomplete"
  },
  "FBI CD": {
    1: "incomplete",
    2: "incomplete",
    3: "incomplete"
  },
  "LOCATION": {
    4: "incomplete",
    5: "incomplete",
    6: "incomplete",
    7: "incomplete",
    9: "incomplete",
    10: "incomplete",
    11: "incomplete",
    12: "incomplete",
    13: "incomplete",
    14: "incomplete",
    15: "incomplete",
    16: "incomplete",
    17: "incomplete",
    18: "incomplete",
    19: "incomplete",
    20: "incomplete",
    21: "incomplete",
    22: "incomplete",
    23: "incomplete",
    24: "incomplete",
    25: "incomplete",
    26: "incomplete",
    27: "incomplete",
    28: "incomplete",
    29: "incomplete",
    30: "incomplete",
    31: "incomplete",
    32: "incomplete",
    33: "incomplete",
    34: "incomplete",
    35: "incomplete",
    36: "incomplete",
    37: "incomplete",
    38: "incomplete",
    39: "incomplete",
    40: "incomplete",
    41: "incomplete",
    42: "incomplete",
    43: "incomplete",
    44: "incomplete",
    45: "incomplete",
    46: "incomplete",
    47: "incomplete",
    48: "incomplete",
    49: "incomplete",
    50: "incomplete",
    51: "incomplete",
    52: "incomplete",
    53: "incomplete",
    54: "incomplete",
    55: "incomplete",
    56: "incomplete",
    57: "incomplete",
    58: "incomplete",
    59: "incomplete",
    60: "incomplete",
    61: "incomplete",
    62: "incomplete",
    63: "incomplete",
    64: "incomplete",
    65: "incomplete",
    66: "incomplete",
    67: "incomplete",
    68: "incomplete",
    69: "incomplete",
    70: "incomplete",
    71: "incomplete",
    72: "incomplete",
    73: "incomplete",
    74: "incomplete",
    75: "incomplete",
    76: "incomplete",
    77: "incomplete",
    78: "incomplete",
    79: "incomplete",
    80: "incomplete",
    81: "incomplete",
    82: "incomplete",
    83: "incomplete",
    84: "incomplete",
    85: "incomplete",
    86: "incomplete",
    87: "incomplete",
    88: "incomplete",
    89: "incomplete",
    90: "incomplete",
    91: "incomplete",
    92: "incomplete",
    93: "incomplete",
    94: "incomplete",
    95: "incomplete",
    96: "incomplete",
    97: "incomplete",
    98: "incomplete",
    99: "incomplete",
    100: "incomplete",
    101: "incomplete",
    102: "incomplete",
    103: "incomplete",
    104: "incomplete",
    105: "incomplete",
    106: "incomplete",
    107: "incomplete",
    108: "incomplete",
    109: "incomplete",
    110: "incomplete",
    111: "incomplete",
    112: "incomplete",
    113: "incomplete",
    114: "incomplete",
    115: "incomplete",
    116: "incomplete",
    117: "incomplete",
    118: "incomplete",
    119: "incomplete",
    120: "incomplete",
    121: "incomplete",
    122: "incomplete",
    123: "incomplete",
    124: "incomplete",
    125: "incomplete",
    126: "incomplete",
    127: "incomplete",
    128: "incomplete",
    129: "incomplete",
    130: "incomplete",
    131: "incomplete",
    132: "incomplete",
    133: "incomplete",
    134: "incomplete",
    135: "incomplete",
    136: "incomplete",
    137: "incomplete",
    138: "incomplete",
    139: "incomplete",
    140: "incomplete",
    141: "incomplete",
    142: "incomplete",
    143: "incomplete",
    144: "incomplete",
    145: "incomplete",
    146: "incomplete",
    147: "incomplete",
    148: "incomplete",
    149: "incomplete",
    150: "incomplete",
    151: "incomplete",
    152: "incomplete",
    153: "incomplete",
    154: "incomplete",
    155: "incomplete",
    156: "incomplete",
    157: "incomplete",
    158: "incomplete",
    159: "incomplete",
    160: "incomplete",
    161: "incomplete",
    162: "incomplete",
    163: "incomplete",
    164: "incomplete",
    165: "incomplete",
    166: "incomplete",
    167: "incomplete",
    168: "incomplete",
    169: "incomplete",
    170: "incomplete",
    171: "incomplete",
    172: "incomplete",
    173: "incomplete",
    174: "incomplete",
    175: "incomplete",
    176: "incomplete",
    177: "incomplete",
    178: "incomplete",
    179: "incomplete",
    180: "incomplete",
    181: "incomplete",
    182: "incomplete",
    183: "incomplete",
    184: "incomplete",
    185: "incomplete",
    186: "incomplete",
    187: "incomplete",
    188: "incomplete",
    189: "incomplete",
    190: "incomplete",
    191: "incomplete",
    192: "incomplete",
    193: "incomplete",
    194: "incomplete",
    195: "incomplete",
    196: "incomplete",
    197: "incomplete",
    198: "incomplete",
    199: "incomplete",
    200: "incomplete"
  }
}
        self.assertEqual(expected_error_map, detected_df)


    # def test_complaints_with_main_detector_result(self):
    #     test_dataframe = pd.read_csv('../provided_datasets/complaints-2025-04-21_17_31.csv')
    #     detected_error_map = incomplete(set_id_column(test_dataframe.head(200)))
    #     expected_error_map = {
    #           "Company": {
    #             "11": "incomplete",
    #             "25": "incomplete",
    #             "41": "incomplete",
    #             "105": "incomplete",
    #             "113": "incomplete",
    #             "168": "incomplete",
    #             "186": "incomplete",
    #             "194": "incomplete",
    #             "197": "incomplete",
    #             "198": "incomplete"
    #           },
    #           "Company public response": {
    #             "144": "incomplete"
    #           },
    #           "Consumer complaint narrative": {
    #             "18": "incomplete",
    #             "23": "incomplete",
    #             "26": "incomplete",
    #             "38": "incomplete",
    #             "43": "incomplete",
    #             "57": "incomplete",
    #             "58": "incomplete",
    #             "131": "incomplete",
    #             "132": "incomplete",
    #             "134": "incomplete",
    #             "137": "incomplete",
    #             "144": "incomplete",
    #             "165": "incomplete",
    #             "167": "incomplete",
    #             "173": "incomplete",
    #             "200": "incomplete"
    #           },
    #           "Consumer consent provided?": {
    #             "30": "incomplete",
    #             "170": "incomplete"
    #           },
    #           "Date received": {
    #             "10": "incomplete",
    #             "11": "incomplete",
    #             "18": "incomplete",
    #             "22": "incomplete",
    #             "23": "incomplete",
    #             "24": "incomplete",
    #             "25": "incomplete",
    #             "26": "incomplete",
    #             "27": "incomplete",
    #             "33": "incomplete",
    #             "34": "incomplete",
    #             "35": "incomplete",
    #             "36": "incomplete",
    #             "38": "incomplete",
    #             "41": "incomplete",
    #             "42": "incomplete",
    #             "43": "incomplete",
    #             "52": "incomplete",
    #             "62": "incomplete",
    #             "68": "incomplete",
    #             "69": "incomplete",
    #             "70": "incomplete",
    #             "74": "incomplete",
    #             "76": "incomplete",
    #             "77": "incomplete",
    #             "82": "incomplete",
    #             "83": "incomplete",
    #             "89": "incomplete",
    #             "94": "incomplete",
    #             "99": "incomplete",
    #             "100": "incomplete",
    #             "102": "incomplete",
    #             "103": "incomplete",
    #             "116": "incomplete",
    #             "120": "incomplete",
    #             "121": "incomplete",
    #             "123": "incomplete",
    #             "124": "incomplete",
    #             "125": "incomplete",
    #             "126": "incomplete",
    #             "130": "incomplete",
    #             "134": "incomplete",
    #             "137": "incomplete",
    #             "139": "incomplete",
    #             "146": "incomplete",
    #             "149": "incomplete",
    #             "151": "incomplete",
    #             "152": "incomplete",
    #             "162": "incomplete",
    #             "176": "incomplete",
    #             "178": "incomplete",
    #             "179": "incomplete",
    #             "181": "incomplete",
    #             "189": "incomplete",
    #             "192": "incomplete",
    #             "195": "incomplete",
    #             "198": "incomplete"
    #           },
    #           "Date sent to company": {
    #             "18": "incomplete",
    #             "22": "incomplete",
    #             "23": "incomplete",
    #             "25": "incomplete",
    #             "26": "incomplete",
    #             "27": "incomplete",
    #             "33": "incomplete",
    #             "34": "incomplete",
    #             "35": "incomplete",
    #             "38": "incomplete",
    #             "41": "incomplete",
    #             "42": "incomplete",
    #             "43": "incomplete",
    #             "44": "incomplete",
    #             "62": "incomplete",
    #             "68": "incomplete",
    #             "70": "incomplete",
    #             "74": "incomplete",
    #             "77": "incomplete",
    #             "84": "incomplete",
    #             "90": "incomplete",
    #             "94": "incomplete",
    #             "99": "incomplete",
    #             "100": "incomplete",
    #             "103": "incomplete",
    #             "118": "incomplete",
    #             "121": "incomplete",
    #             "123": "incomplete",
    #             "124": "incomplete",
    #             "125": "incomplete",
    #             "126": "incomplete",
    #             "129": "incomplete",
    #             "130": "incomplete",
    #             "134": "incomplete",
    #             "137": "incomplete",
    #             "139": "incomplete",
    #             "146": "incomplete",
    #             "149": "incomplete",
    #             "162": "incomplete",
    #             "176": "incomplete",
    #             "179": "incomplete",
    #             "182": "incomplete",
    #             "189": "incomplete",
    #             "192": "incomplete",
    #             "193": "incomplete",
    #             "195": "incomplete",
    #             "197": "incomplete",
    #             "198": "incomplete"
    #           },
    #           "Issue": {
    #             "52": "incomplete",
    #             "104": "incomplete",
    #             "140": "incomplete"
    #           },
    #           "State": {
    #             "1": "incomplete",
    #             "3": "incomplete",
    #             "24": "incomplete",
    #             "37": "incomplete",
    #             "41": "incomplete",
    #             "43": "incomplete",
    #             "56": "incomplete",
    #             "63": "incomplete",
    #             "81": "incomplete",
    #             "82": "incomplete",
    #             "89": "incomplete",
    #             "101": "incomplete",
    #             "103": "incomplete",
    #             "110": "incomplete",
    #             "122": "incomplete",
    #             "124": "incomplete",
    #             "132": "incomplete",
    #             "133": "incomplete",
    #             "136": "incomplete",
    #             "147": "incomplete",
    #             "150": "incomplete",
    #             "165": "incomplete",
    #             "166": "incomplete",
    #             "173": "incomplete",
    #             "176": "incomplete"
    #           },
    #           "Sub-issue": {
    #             "34": "incomplete",
    #             "52": "incomplete",
    #             "74": "incomplete",
    #             "104": "incomplete",
    #             "137": "incomplete",
    #             "140": "incomplete",
    #             "186": "incomplete",
    #             "192": "incomplete",
    #             "196": "incomplete"
    #           },
    #           "Submitted via": {
    #             "17": "incomplete",
    #             "28": "incomplete",
    #             "92": "incomplete",
    #             "102": "incomplete"
    #           },
    #           "ZIP code": {
    #             "5": "incomplete",
    #             "19": "incomplete",
    #             "22": "incomplete",
    #             "23": "incomplete",
    #             "51": "incomplete",
    #             "101": "incomplete",
    #             "106": "incomplete",
    #             "111": "incomplete",
    #             "114": "incomplete",
    #             "134": "incomplete",
    #             "141": "incomplete",
    #             "147": "incomplete",
    #             "159": "incomplete",
    #             "185": "incomplete",
    #             "188": "incomplete",
    #             "200": "incomplete"
    #           }
    #         }
    #     detected_df = pd.DataFrame(detected_error_map)
    #     expected_df = pd.DataFrame(expected_error_map)
    #     self.assertEqual(expected_error_map, detected_error_map)

if __name__ == '__main__':
    unittest.main()
